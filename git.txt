### UBUNTU MACHINE GIT and GITHUB LAB

1) sudo su
2) apt update -y
3) apt install git -y
4) mkdir akshatproj
5) cd akshatproj
6) vi index.html 
press i 
hello world
press esc :wq

7) git init    #it will initialize the git in akshatproj folder
8) git status
9) git add .    #add the file to the staging area
10) git status
11) git rm --cached index.html   #moving back index.html from staging to working dir
12) git status  


###

13) git add .
14) git status
15) vi index.html
add some content 
16) git status   (you will see a message saying index.html is modified)
17) git add .
18) git status

####

Setting up local configuration for git

19) git config --global user.name "AkshatGupta"    (you name you can put)   
20 )git config --global user.email "akshu20791@gmail.com"    (your any email id you can give) 

git config --list 
### lets see how we can commit (save the code as a version) 

21) git status   #you will see a file in green colour it is in the staging area
22) git commit -m"created index.html file"
23) git status    #nothing would be there.as we have created a commit and saved the code as a version

##### HOw to show the changes between working directory and staging area ############

For example: lets say you have created a file akshat.txt and have written content : Hi akshat and staged it 
now you made some more changes to akshat.txt file ...you have added content : welcome to the training . 
now with git status it will only show that the file is modified ...but what exact content is added will not be shown...how we can see that ....


24) vi akshat.txt
hello akshat   (press enter)
how are you ?  (press enter) 


25) git add .
26) git status
27) vi akshat.txt
hello akshat
how are you?
we are learning devops

28) git status
(you will see that akshat.txt is modified but what is modified)

29) git diff akshat.txt

(you will see that we are learning devops is been added up )

30) git add .

31) git commit -m"akshat.txt file created"


################# Review our work #########################


To view all the commits :
32) git log 
o/p:  
commit 04548b998e1be38936314ac7e62f269ad44ff16b (HEAD -> master)
Author: AkshatGupta <akshu20791@gmail.com>
Date:   Sun Jun 11 06:35:31 2023 +0000

    akshat.txt file created:

commit ce20d3bf44c5052bfbb8510f82d4ca281f0dcd18
Author: AkshatGupta <akshu20791@gmail.com>
Date:   Sun Jun 11 06:11:32 2023 +0000

    Created index.html file



# want to see the commit in a single line 

33) git log --oneline
o/p
04548b9 (HEAD -> master) akshat.txt file created:
ce20d3b Created index.html file

# want to see the commit in graphical format 

34)  git log --oneline --graph
o/p:
* 04548b9 (HEAD -> master) akshat.txt file created:
* ce20d3b Created index.html file


### want to see what happened at a particular commit ....

35) git show <<commit id>>


### if lets suppose , you are a developer and you are working on a file ....and you are parallely checking the logs which are
generated by that file. So what you have done is you have created a .log file where all the logs are getting saved...
for example lets say you are working on login functionality of the website ...as a developer while developing you will also
test the functionality by putting some randon data on the login page and check the logs for the error generated .

Since i dont want to put those logs into the github so i can ignore them ...with git ignore 

36) vi login.log 

Akshat logged in
Aman logged in
Nikita logged in
tulika logged in 

37) vi .gitignore

login.log

esc :wq


38) git status    #you will see that login.log is not present

39) git add .

40) git commit -m"gitignore crerated"

41) vi login.log

add some content 


42) git status   # you will nothing 



##########################################














